{"version":3,"sources":["components/context/index.js","components/Stats.js","components/Stopwatch.js","components/Header.js","components/AddPlayerForm.js","components/Counter.js","components/IsHighestScore.js","components/Player.js","components/PlayerList.js","App.js","index.js"],"names":["ScoreboardContext","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","players","name","score","id","prevPlayerId","handleAddPlayer","setState","prevState","toConsumableArray","handleRemovePlayer","filter","p","handleScoreChange","index","delta","getHighestScore","highestScore","reduce","player","Math","max","inherits","createClass","key","value","react_default","a","createElement","actions","scoreChange","removePlayer","isHighestScore","addPlayer","props","children","Component","Consumer","Stats","_ref","totalPlayers","totalPoints","total","className","Stopwatch","isRunning","elapsedTime","previousTime","tick","now","Date","handleStopwatch","handleReset","_this2","intervalID","setInterval","clearInterval","seconds","floor","onClick","Header","components_Stats","components_Stopwatch","AddPlayerForm","playerInput","createRef","onSubmit","event","preventDefault","current","currentTarget","reset","type","ref","placeholder","Counter","_ref2","IsHighestScore","isHighScore","viewBox","d","transform","width","height","Player","components_IsHighestScore","components_Counter","PureComponent","PlayerList","Fragment","map","components_Player","assign","toString","App","components_Header","components_PlayerList","components_AddPlayerForm","ReactDOM","render","context_Provider","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0c5e529d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nconst ScoreboardContext = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n    \r\n    state = {\r\n        players: [\r\n            {\r\n                name: \"Steve\",\r\n                score: 1,\r\n                id: 1\r\n            },\r\n            {\r\n                name: \"Treasure\",\r\n                score: 0,\r\n                id: 2\r\n            },\r\n            {\r\n                name: \"Ashley\",\r\n                score: 0,\r\n                id: 3\r\n            },\r\n            {\r\n                name: \"James\",\r\n                score: 0,\r\n                id: 4\r\n            }\r\n        ]\r\n    };\r\n    \r\n    prevPlayerId = 4;\r\n    \r\n    handleAddPlayer = (name) => {\r\n        this.setState( prevState => ({\r\n            players: [\r\n                ...prevState.players, //All players already in list\r\n                {\r\n                    name,\r\n                    score: 0,\r\n                    id: this.prevPlayerId += 1\r\n                }\r\n            ]\r\n        }));\r\n    }\r\n    handleRemovePlayer = (id) => {\r\n        this.setState( prevState => ({\r\n            players: prevState.players.filter(p => p.id !== id)\r\n        }));\r\n    }\r\n    \r\n    handleScoreChange = (index, delta) => {\r\n        this.setState( prevState => ({\r\n            score: prevState.players[index].score += delta\r\n        }));\r\n    }\r\n    \r\n    getHighestScore = () => {\r\n        let highestScore = this.state.players.reduce((score, player) => {\r\n            return Math.max(score, player.score)\r\n        }, 0);\r\n        \r\n        if (highestScore) {\r\n            return highestScore;\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <ScoreboardContext.Provider value={{\r\n                players: this.state.players,\r\n                actions: {\r\n                    scoreChange: this.handleScoreChange,\r\n                    removePlayer: this.handleRemovePlayer,\r\n                    isHighestScore: this.getHighestScore,\r\n                    addPlayer: this.handleAddPlayer\r\n                },\r\n            }}>\r\n                {this.props.children}\r\n            </ScoreboardContext.Provider>\r\n        );\r\n    }\r\n}\r\nexport const Consumer = ScoreboardContext.Consumer;","import React from 'react';\r\nimport {Consumer} from \"./context\";\r\n\r\nconst Stats = () => {\r\n    \r\n    return (\r\n        <Consumer>\r\n            {\r\n                ({players}) => {\r\n                    let totalPlayers = players.length;\r\n                    let totalPoints = players.reduce((total, player) => {return total + player.score}, 0);\r\n    \r\n                    return (\r\n                        <table className=\"stats\">\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>Players:</td>\r\n                                <td>{totalPlayers}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Total Points:</td>\r\n                                <td>{totalPoints}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    );\r\n                }\r\n            }\r\n        </Consumer>\r\n    );\r\n}\r\n\r\nexport default Stats;","import React, {Component} from 'react';\r\n\r\nclass Stopwatch extends Component {\r\n    \r\n    state = {\r\n        isRunning: false,\r\n        elapsedTime: 0,\r\n        previousTime: 0,\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.intervalID = setInterval(() => this.tick(), 100);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalID);\r\n    }\r\n    tick = () => {\r\n        if (this.state.isRunning) {\r\n            const now = Date.now();\r\n            \r\n            this.setState(prevState => ({\r\n                previousTime: now,\r\n                elapsedTime: prevState.elapsedTime + (now -\r\n                    this.state.previousTime)\r\n            }));\r\n        }\r\n    }\r\n    \r\n    handleStopwatch = () => {\r\n        this.setState(prevState => ({\r\n            isRunning: !prevState.isRunning\r\n        }));\r\n        if (!this.state.isRunning) {\r\n            this.setState({previousTime: Date.now()});\r\n        }\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState(prevState => ({\r\n            elapsedTime: 0\r\n        }));\r\n    }\r\n\r\n    render() {\r\n\r\n        const seconds = Math.floor(this.state.elapsedTime / 1000);\r\n        return (\r\n            <div className=\"stopwatch\">\r\n                <h2>Stopwatch</h2>\r\n                <span className=\"stopwatch-time\">{seconds}</span>\r\n                <button onClick={this.handleStopwatch}>\r\n                    {this.state.isRunning ? 'Stop' : 'Start'}\r\n                </button>\r\n                <button onClick={this.handleReset}>Reset</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stopwatch;","import React from 'react';\r\nimport Stats from './Stats';\r\nimport Stopwatch from './Stopwatch';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <Stats />\r\n            <h1>Scoreboard</h1>\r\n            <Stopwatch />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport {Consumer} from \"./context\";\r\n\r\nclass AddPlayerForm extends Component {\r\n    \r\n    playerInput = React.createRef();\r\n    \r\n    render() {\r\n        return (\r\n            <Consumer>{\r\n                ({actions}) => {\r\n                    const handleAddPlayer = (event) => {\r\n                        event.preventDefault();\r\n                        actions.addPlayer(this.playerInput.current.value);\r\n                        event.currentTarget.reset(); //Resets textfield\r\n                    }\r\n                    return (\r\n                        <form onSubmit={handleAddPlayer} >\r\n                            <input\r\n                                type=\"text\"\r\n                                ref={this.playerInput}\r\n                                placeholder=\"Enter a player's name\"\r\n                            />\r\n        \r\n                            <input\r\n                                type=\"submit\"\r\n                                value=\"Add Player\"\r\n                            />\r\n                        </form>\r\n                    );\r\n                }\r\n            }</Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddPlayerForm;","import React from 'react';\r\nimport {Consumer} from \"./context\";\r\n\r\nconst Counter = ({index}) => { //Destructuring...\r\n    \r\n    return (\r\n        <Consumer>{\r\n            ({actions, players}) => {\r\n                const scoreChange = actions.scoreChange;\r\n                return (\r\n                    <div className=\"counter\">\r\n                        <button className=\"counter-action decrement\" onClick={() => scoreChange(index, -1)}> - </button>\r\n                        <span className=\"counter-score\">{players[index].score}</span>\r\n                        <button className=\"counter-action increment\" onClick={() => scoreChange(index, 1)}> + </button>\r\n                    </div>\r\n                );\r\n            }\r\n        }</Consumer>\r\n    );\r\n}\r\n\r\nexport default Counter;","import React from 'react';\r\n\r\nconst IsHighestScore = ({isHighScore}) => {\r\n    \r\n    return (\r\n        <svg viewBox=\"0 0 44 35\" className={isHighScore ? \"is-high-score\" : null}>\r\n            <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\r\n            <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\n\r\nexport default IsHighestScore;","import React, {PureComponent} from 'react';\r\nimport {Consumer} from \"./context\";\r\nimport Counter from './Counter';\r\nimport IsHighestScore from './IsHighestScore';\r\n\r\nclass Player extends PureComponent {\r\n    \r\n    render() {\r\n        const {index} = this.props; // Destructuring\r\n        \r\n        return (\r\n            <Consumer>{\r\n                ({actions, players}) => {\r\n                    return (\r\n                        <div className=\"player\">\r\n                        <span className=\"player-name\">\r\n                            <button className=\"remove-player\" onClick={() => actions.removePlayer(players[index].id)}>✖</button>\r\n                            <IsHighestScore isHighScore={actions.isHighestScore() === players[index].score}/>\r\n                            {players[index].name}\r\n                        </span>\r\n                            <Counter index={index} />\r\n                        </div>\r\n                    );\r\n                }\r\n            }</Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\nimport Player from './Player';\r\nimport {Consumer} from \"./context\";\r\n\r\nconst PlayerList = () => {\r\n    \r\n    return (\r\n        \r\n        <Consumer>{\r\n            value => {\r\n                return (\r\n                    <React.Fragment>{\r\n                        value.players.map((player, index) =>\r\n                            <Player\r\n                                {...player}\r\n                                key={player.id.toString()}\r\n                                index={index}\r\n                            />)\r\n                    }</React.Fragment>\r\n                );\r\n            }\r\n        }</Consumer>\r\n    );\r\n}\r\n\r\nexport default PlayerList;","import React from 'react';\nimport Header from './components/Header'\nimport AddPlayerForm from './components/AddPlayerForm';\nimport PlayerList from './components/PlayerList';\n\nconst App = () => {\n    return (\n        <div className=\"scoreboard\">\n            <Header />\n            <PlayerList />\n            <AddPlayerForm />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"./components/context\";\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <Provider>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}