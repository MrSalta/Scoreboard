{"version":3,"sources":["components/Stats.js","components/Stopwatch.js","components/Header.js","components/Counter.js","components/IsHighestScore.js","components/Player.js","components/AddPlayerForm.js","components/App.js","index.js"],"names":["Stats","_ref","players","totalPlayers","length","totalPoints","reduce","total","player","score","react_default","a","createElement","className","Stopwatch","state","isRunning","elapsedTime","previousTime","tick","_this","now","Date","setState","prevState","handleStopwatch","handleReset","_this2","this","intervalID","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","title","components_Stats","components_Stopwatch","Counter","index","changeScore","IsHighestScore","isHighScore","viewBox","d","transform","width","height","Player","_this$props","props","name","id","removePlayer","components_IsHighestScore","components_Counter","PureComponent","AddPlayerForm","playerInput","React","createRef","handleAddPlayer","event","addPlayer","preventDefault","current","value","currentTarget","reset","onSubmit","type","ref","placeholder","App","prevPlayerId","Object","toConsumableArray","concat","handleRemovePlayer","filter","p","handleScoreChange","delta","getHighestScore","highestScore","max","components_Header","map","components_Player","components_AddPlayerForm","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.0534027e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Stats = ({players}) => {\n    \n    let totalPlayers = players.length;\n    let totalPoints = players.reduce((total, player) => {return total + player.score}, 0);\n    \n    return (\n        <table className=\"stats\">\n            <tbody>\n            <tr>\n                <td>Players:</td>\n                <td>{totalPlayers}</td>\n            </tr>\n            <tr>\n                <td>Total Points:</td>\n                <td>{totalPoints}</td>\n            </tr>\n            </tbody>\n        </table>\n    );\n}\n\nexport default Stats;","import React, {Component} from 'react';\n\nclass Stopwatch extends Component {\n    \n    state = {\n        isRunning: false,\n        elapsedTime: 0,\n        previousTime: 0,\n    }\n    \n    componentDidMount() {\n        this.intervalID = setInterval(() => this.tick(), 100);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n    tick = () => {\n        if (this.state.isRunning) {\n            const now = Date.now();\n            \n            this.setState(prevState => ({\n                previousTime: now,\n                elapsedTime: prevState.elapsedTime + (now -\n                    this.state.previousTime)\n            }));\n        }\n    }\n    \n    handleStopwatch = () => {\n        this.setState(prevState => ({\n            isRunning: !prevState.isRunning\n        }));\n        if (!this.state.isRunning) {\n            this.setState({previousTime: Date.now()});\n        }\n    }\n\n    handleReset = () => {\n        this.setState(prevState => ({\n            elapsedTime: 0\n        }));\n    }\n\n    render() {\n\n        const seconds = Math.floor(this.state.elapsedTime / 1000);\n        return (\n            <div className=\"stopwatch\">\n                <h2>Stopwatch</h2>\n                <span className=\"stopwatch-time\">{seconds}</span>\n                <button onClick={this.handleStopwatch}>\n                    {this.state.isRunning ? 'Stop' : this.state.elapsedTime > 0 ? 'Resume' : 'Start'}\n                </button>\n                <button onClick={this.handleReset}>Reset</button>\n            </div>\n        );\n    }\n}\n\nexport default Stopwatch;","import React from 'react';\nimport Stats from './Stats';\nimport Stopwatch from './Stopwatch';\n\nconst Header = ({title, players}) => {\n    return (\n        <header>\n            <Stats players={players}/>\n            <h1>{title}</h1>\n            <Stopwatch />\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nconst Counter = ({score, index, changeScore}) => { //Destructuring...\n    \n    return (\n        <div className=\"counter\">\n            <button className=\"counter-action decrement\" onClick={() => changeScore(index, -1)}> - </button>\n            <span className=\"counter-score\">{score}</span>\n            <button className=\"counter-action increment\" onClick={() => changeScore(index, 1)}> + </button>\n        </div>\n    );\n}\n\nexport default Counter;","import React from 'react';\n\nconst IsHighestScore = ({isHighScore}) => {\n    \n    return (\n        <svg viewBox=\"0 0 44 35\" className={isHighScore ? \"is-high-score\" : null}>\n            <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\n            <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\n        </svg>\n    );\n}\n\n\nexport default IsHighestScore;","import React, {PureComponent} from 'react';\nimport Counter from './Counter';\nimport IsHighestScore from './IsHighestScore';\n\nclass Player extends PureComponent {\n    \n    render() {\n        const {name, score, id, index\n            ,changeScore, removePlayer} = this.props; // Destructuring\n        return (\n            <div className=\"player\">\n      <span className=\"player-name\">\n        <button className=\"remove-player\" onClick={() => removePlayer(id)}>âœ–</button>\n        <IsHighestScore isHighScore={this.props.isHighScore}/>\n          { name }\n      </span>\n\n                <Counter\n                    score={score}\n                    index={index}\n                    changeScore={changeScore}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Player;","import React, {Component} from 'react';\n\nclass AddPlayerForm extends Component {\n    \n    playerInput = React.createRef();\n    \n    handleAddPlayer = (event) => {\n        const {addPlayer} = this.props; // Destructuring...\n        event.preventDefault();\n        addPlayer(this.playerInput.current.value);\n        event.currentTarget.reset(); //Resets textfield\n    }\n    \n    render() {\n        return (\n            <form onSubmit={this.handleAddPlayer} >\n                <input\n                    type=\"text\"\n                    ref={this.playerInput}\n                    placeholder=\"Enter a player's name\"\n                />\n                \n                <input\n                    type=\"submit\"\n                    value=\"Add Player\"\n                />\n            </form>\n        );\n        \n    }\n}\n\nexport default AddPlayerForm;","import React, {Component} from 'react';\nimport Header from './Header'\nimport Player from './Player';\nimport AddPlayerForm from './AddPlayerForm';\n\nclass App extends Component {\n  state = {\n    players: [\n      {\n        name: \"Steve\",\n        score: 1,\n        id: 1\n      },\n      {\n        name: \"Guil\",\n        score: 0,\n        id: 2\n      },\n      {\n        name: \"Ashley\",\n        score: 0,\n        id: 3\n      },\n      {\n        name: \"James\",\n        score: 0,\n        id: 4\n      }\n    ]\n  };\n  \n    prevPlayerId = 4;\n    \n    handleAddPlayer = (name) => {\n        this.setState( prevState => ({\n            players: [\n                ...prevState.players, //All players already in list\n                {\n                name,\n                score: 0,\n                id: this.prevPlayerId += 1\n                }\n            ]\n        }));\n    }\n    handleRemovePlayer = (id) => {\n        this.setState( prevState => ({\n            players: prevState.players.filter(p => p.id !== id)\n        }));\n    }\n    \n    handleScoreChange = (index, delta) => {\n        this.setState( prevState => ({\n            score: prevState.players[index].score += delta\n        }));\n    }\n    \n    getHighestScore = () => {\n        let highestScore = this.state.players.reduce((score, player) => {\n            return Math.max(score, player.score)\n        }, 0);\n        \n        if (highestScore) {\n            return highestScore;\n        }\n        return null;\n    }\n\n  render() {\n    return (\n      <div className=\"scoreboard\">\n        <Header \n          title=\"Scoreboard\" \n          players={this.state.players}\n        />\n  \n        {/* Players list */}\n        {this.state.players.map((player, index) =>\n          <Player\n            name={player.name}\n            score={player.score}\n            id={player.id}\n\n            index={index}\n            changeScore={this.handleScoreChange}\n            removePlayer={this.handleRemovePlayer}\n            isHighScore={this.getHighestScore() === player.score} //Must use () at funtion end to evaluate\n          />\n        )}\n        <AddPlayerForm addPlayer={this.handleAddPlayer}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}